<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /v9rxfP/bcf1/23H9f9tx/X/bcf1/23H9f9tx/X/bMb1/2zI9/9syPf/bMj3/2zI9/9syPf/a8f2/27K
        +P9w0/7/RpfB/0x6kf80do78EX6t/wBLccEA//8AFMD/AwAAAAAtJhcAAAAAAAAAAAQAAAAAAAAAXgwV
        Gv9x0fn7c9T//2vO/v9oy///aMz+/2jM/v9ozP7/aMz+/2fL/v9v0f//b8r4/2vG9f9syPf/bMj3/2zI
        9/9syPf/a8f2/2vG9f920///atL//wiy/P4AvP//BIC09QgAAB4IAAAABg8UAgEBAAAAAAAAAAAAAQAA
        AAAAAAAcAQICtyZFVfo7cIv/VHyP/2eKmf9kiJr/ZYme/2WJnf9liZ7/Z4ib/1KKp/9iw/L/c9D+/2vF
        8/9sxvT/bMb0/2zG9P9sxvT/asb0/3XH8v87t/L/AKbz/wSu/PwBk9X/AB0pWAApOgAAMkkDAAAAAAAA
        AAAAAAAAAAAAAQAAAABVm78DAAAA3Clbdv+sp539/+bH//jdzv/94d7//eDc//zg2///5eD/3MK+/2N7
        if9Tq9j/cNT//27R/v9u0f//b9H//27R//9z0v//Usr//wKz//8AtP//Abf/+wGv9/8ASGabAYvDAAGK
        wgQAAAAAAAAAAAAAAAAECAkAAAAAADJccQYAAADcLmSA/6+xq/3/8Nf/+ufd///r7f//6+v//+vr//7q
        6v//9PT/+ePf/46Nkv9Sh6P/V5Ct/1aOq/9Wjqv/Vo6r/1aOq/8ef63/EXyu/xB5qv8Edan9AWqb9AAs
        P18ARGMAAEhpAwAAAAAAAAAAAAAAAAAAAAEAAAAAUZS2AwAAANwtYX3/rq6n/f/q0P/14db/+uXm//rl
        5P/65eT/+uXk//jj4v/66Oj//+3r/+fNyP/iycX/48rG/+PJxf/jycX/4snF/+bJw//11M3+u6aj/zJc
        cfkDAAAnAAAAAAgOEQIAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABapcsDAAAA2yteef+tsqz9///o//z5
        7v///f7///38///9/f///f3///39///8/P//+/v//////////////////////////////////Pz9////
        //7GyMr/NGqG9wgJCR0AAAAACQsPAgF1igAAAAAAAAAAAAAAAAAAAAABAAAAAFGWugQAAADaPHWQ/zpD
        RfpwWUf8bl1U/G1bV/xtW1f8bVtX/G1bV/xtW1f8bVxX/GxaVv5rWlb/bFxZ/2xcWf9sXFn/bFxZ/2xc
        WP9qWVX+cVxX+zw4OP48dZH1AgAAHgAAAAAJERQCAAAAAAAAAAAAAAAAAAAAAAAAAAACBAUAAAAAAAAA
        AMs5aID/TJS5/RpBVv8gS2H/H0le/x9JXv8fSV7/H0le/x9JXv8fSV7/IU5k/h9KX/4YPVD/GT9S/xk/
        Uv8ZP1L/GT9S/iBMYf4bQ1b+P36e/0qHp+0AAAATAAAAAAYKDQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAOgcNELQ+cYu4SoShuUiAnLlIgZ25SIGduUiBnblIgJ26SIGdukmDoLk2X3bsWJ6+/4Hs
        //t63v37e+D/+3zh//t63v7/V53B6kyHpb5Gf5zGGzNAXTlrhQBBeJQCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ADkCBAX4R4Oi/2Gz3f5cq9T+YLLc/0F5lu4AAAArAAAAABAeJQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIYLzgDqv//Aq39+wKr/v8CrP//Aqz//wKs//8CrP//Aqn9
        /QJ9sK8DAAAAAAIEBSoFCApdFikyWxcqNFgUJi9aBQkMIwAHCwChqqoDuvD4AixWZgPt//8A////AAAB
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAMFFgACpIVgAuTl0BEyEnAgAAAAAGCg0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlAEif0E0EL+AAAIvgAAAk4AAAEWAAAASgAAABYAAAAKAAAACgAADAkAB
        MgL0xAQFgv/IAsgAAALIAAAB0AAAAZAAAAKQAAACsAAABKAAAAigAAAEoAAABdAAAASAAAAE0AAACdAA
        AAnQAAAJyAAAC8gAABPS+QCL6ACBE/wBJB8=
</value>
  </data>
</root>